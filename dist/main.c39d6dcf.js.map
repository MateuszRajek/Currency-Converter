{"version":3,"sources":["main.ts"],"names":[],"mappings":";;AAAA,MAAM,YAAY,GAAgB,QAAQ,CAAC,aAAT,CAAuB,uBAAvB,CAAlC;AACA,MAAM,oBAAoB,GAAqB,QAAQ,CAAC,aAAT,CAAuB,oBAAvB,CAA/C;AACA,MAAM,gBAAgB,GAAsB,QAAQ,CAAC,aAAT,CAAuB,mBAAvB,CAA5C;AACA,MAAM,WAAW,GAAqB,QAAQ,CAAC,aAAT,CAAuB,sBAAvB,CAAtC;AACA,MAAM,qBAAqB,GAAgB,QAAQ,CAAC,aAAT,CAAuB,kBAAvB,CAA3C;AACA,IAAI,QAAQ,GAAW,gBAAgB,CAAC,KAAxC;;AAEA,MAAM,eAAe,GAAG,SAAlB,eAAkB,GAAA;AACpB,SAAO,QAAQ,GAAG,KAAK,KAAvB;AACH,CAFD;;AAIA,YAAY,CAAC,gBAAb,CAA8B,OAA9B,EAAuC,WAAvC;AACA,gBAAgB,CAAC,gBAAjB,CAAkC,QAAlC,EAA4C,eAA5C;AAEA,IAAK,eAAL;;AAAA,CAAA,UAAK,eAAL,EAAoB;AAChB,EAAA,eAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,eAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,eAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACA,EAAA,eAAA,CAAA,KAAA,CAAA,GAAA,KAAA;AACH,CALD,EAAK,eAAe,KAAf,eAAe,GAAA,EAAA,CAApB;;AAOA,SAAS,gBAAT,CAA0B,eAA1B,EAAiD;AAC7C,QAAM,UAAU,GAAW,QAAQ,CAAC,oBAAoB,CAAC,KAAtB,CAAnC;;AAEA,MAAI,QAAQ,KAAK,KAAjB,EAAwB;AACpB,IAAA,WAAW,CAAC,KAAZ,aAAuB,CAAC,UAAU,GAAG,eAAd,EAA+B,OAA/B,CAAuC,CAAvC,CAAvB;AACH,GAFD,MAEO,IAAI,QAAQ,KAAK,KAAjB,EAAwB;AAC3B,IAAA,WAAW,CAAC,KAAZ,aAAuB,CAAC,UAAU,GAAG,eAAd,EAA+B,OAA/B,CAAuC,CAAvC,CAAvB;AACH,GAFM,MAEA,IAAI,QAAQ,KAAK,KAAjB,EAAwB;AAC3B,IAAA,WAAW,CAAC,KAAZ,aAAuB,CAAC,UAAU,GAAG,eAAd,EAA+B,OAA/B,CAAuC,CAAvC,CAAvB;AACH,GAFM,MAEA,IAAI,QAAQ,KAAK,KAAjB,EAAwB;AAC3B,IAAA,WAAW,CAAC,KAAZ,aAAuB,CAAC,UAAU,GAAG,eAAd,EAA+B,OAA/B,CAAuC,CAAvC,CAAvB;AACH;;AAED,SAAO,qBAAqB,CAAC,WAAtB,uCAAiE,QAAQ,CAAC,WAAT,EAAjE,kBAA+F,eAA/F,SAAP;AACH;;AAED,eAAe,WAAf,GAA0B;AACtB,MAAI,QAAQ,GAAG,MAAM,KAAK,wDAAiD,QAAjD,OAA1B;AACA,MAAI,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAT,EAAjB;AACA,MAAI,UAAU,GAAG,MAAM,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,GAArC;AACA,QAAM,eAAe,GAAW,UAAhC;AAEA,SAAO,gBAAgB,CAAC,eAAD,CAAvB;AACH","file":"main.c39d6dcf.js","sourceRoot":"..","sourcesContent":["const btnConverter = <HTMLElement>document.querySelector('.click-to-convert-btn');\r\nconst inputAmountToConvert = <HTMLInputElement>document.querySelector('.amount-to-convert');\r\nconst currencySelector = <HTMLOptionElement>document.querySelector('.currency-options');\r\nconst outputScore = <HTMLInputElement>document.querySelector('.after-convert-value');\r\nconst currentCurrencyTxtSpn = <HTMLElement>document.querySelector('.currentCurrency');\r\nlet currency: string = currencySelector.value;\r\n\r\nconst valueOfCurrency = function(this: any):number {\r\n    return currency = this.value;\r\n}\r\n\r\nbtnConverter.addEventListener('click', getCurrency);\r\ncurrencySelector.addEventListener('change', valueOfCurrency);\r\n\r\nenum CurrencyChoosen {\r\n    'eur' = 'eur',\r\n    'chf' = 'chf',\r\n    'usd' = 'usd',\r\n    'gbp' = 'gbp',\r\n}\r\n\r\nfunction currencyExchange(currentCurrency: number):string {\r\n    const userAmount: number = parseInt(inputAmountToConvert.value);\r\n\r\n    if (currency === 'eur') {\r\n        outputScore.value = `${(userAmount * currentCurrency).toFixed(2)} PLN`;\r\n    } else if (currency === 'chf') {\r\n        outputScore.value = `${(userAmount * currentCurrency).toFixed(2)} PLN`;\r\n    } else if (currency === 'usd') {\r\n        outputScore.value = `${(userAmount * currentCurrency).toFixed(2)} PLN`;\r\n    } else if (currency === 'gbp') {\r\n        outputScore.value = `${(userAmount * currentCurrency).toFixed(2)} PLN`;\r\n    }\r\n\r\n    return currentCurrencyTxtSpn.textContent = `Current currency value of ${currency.toUpperCase()} is: ${currentCurrency} PLN`\r\n}\r\n\r\nasync function getCurrency():Promise<string> {\r\n    let response = await fetch(`https://api.nbp.pl/api/exchangerates/rates/a/${currency}/`);\r\n    let json = await response.json();\r\n    let finalScore = await json.rates[0].mid\r\n    const currentCurrency: number = finalScore\r\n\r\n    return currencyExchange(currentCurrency)\r\n}\r\n\r\n"]}